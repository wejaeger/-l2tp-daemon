#############################################################################
# Makefile for building: dist/Release/L2tpIPsecVpnControlDaemon
# Generated by qmake (2.01a) (Qt 4.8.0) on: Tue Mar 13 08:26:13 2012
# Project:  nbproject/qt-Release.pro
# Template: app
# Command: /usr/bin/qmake-qt4 -after  OBJECTS_DIR=build/Release DESTDIR=dist/Release -o qttmp-Release.mk nbproject/qt-Release.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_WEBKIT -DQT_NO_DEBUG -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -Inbproject -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtNetwork -I/usr/include/qt4 -Isrc/generated -I.
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib/i386-linux-gnu -lQtNetwork -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = build/Release/

####### Files

SOURCES       = src/main.cpp \
		src/VpnClientConnection.cpp \
		src/VpnControlDaemonApplication.cpp \
		src/VpnControlDaemon.cpp src/generated/moc_VpnControlDaemon.cpp \
		src/generated/moc_VpnClientConnection.cpp \
		src/generated/moc_VpnControlDaemonApplication.cpp
OBJECTS       = build/Release/main.o \
		build/Release/VpnClientConnection.o \
		build/Release/VpnControlDaemonApplication.o \
		build/Release/VpnControlDaemon.o \
		build/Release/moc_VpnControlDaemon.o \
		build/Release/moc_VpnClientConnection.o \
		build/Release/moc_VpnControlDaemonApplication.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		nbproject/qt-Release.pro
QMAKE_TARGET  = L2tpIPsecVpnControlDaemon
DESTDIR       = dist/Release/
TARGET        = dist/Release/L2tpIPsecVpnControlDaemon

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: qttmp-Release.mk $(TARGET)

$(TARGET):  $(OBJECTS)  
	@$(CHK_DIR_EXISTS) dist/Release/ || $(MKDIR) dist/Release/ 
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

qttmp-Release.mk: nbproject/qt-Release.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/lib/i386-linux-gnu/libQtNetwork.prl \
		/usr/lib/i386-linux-gnu/libQtCore.prl
	$(QMAKE) -after  OBJECTS_DIR=build/Release DESTDIR=dist/Release -o qttmp-Release.mk nbproject/qt-Release.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/lib/i386-linux-gnu/libQtNetwork.prl:
/usr/lib/i386-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -after  OBJECTS_DIR=build/Release DESTDIR=dist/Release -o qttmp-Release.mk nbproject/qt-Release.pro

dist: 
	@$(CHK_DIR_EXISTS) build/Release/L2tpIPsecVpnControlDaemon0.9.8 || $(MKDIR) build/Release/L2tpIPsecVpnControlDaemon0.9.8 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) build/Release/L2tpIPsecVpnControlDaemon0.9.8/ && $(COPY_FILE) --parents src/VpnControlDaemon.h src/VpnClientConnection.h src/VpnControlDaemonApplication.h build/Release/L2tpIPsecVpnControlDaemon0.9.8/ && $(COPY_FILE) --parents src/main.cpp src/VpnClientConnection.cpp src/VpnControlDaemonApplication.cpp src/VpnControlDaemon.cpp build/Release/L2tpIPsecVpnControlDaemon0.9.8/ && (cd `dirname build/Release/L2tpIPsecVpnControlDaemon0.9.8` && $(TAR) L2tpIPsecVpnControlDaemon0.9.8.tar L2tpIPsecVpnControlDaemon0.9.8 && $(COMPRESS) L2tpIPsecVpnControlDaemon0.9.8.tar) && $(MOVE) `dirname build/Release/L2tpIPsecVpnControlDaemon0.9.8`/L2tpIPsecVpnControlDaemon0.9.8.tar.gz . && $(DEL_FILE) -r build/Release/L2tpIPsecVpnControlDaemon0.9.8


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) qttmp-Release.mk


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: src/generated/moc_VpnControlDaemon.cpp src/generated/moc_VpnClientConnection.cpp src/generated/moc_VpnControlDaemonApplication.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) src/generated/moc_VpnControlDaemon.cpp src/generated/moc_VpnClientConnection.cpp src/generated/moc_VpnControlDaemonApplication.cpp
src/generated/moc_VpnControlDaemon.cpp: src/VpnControlDaemon.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/VpnControlDaemon.h -o src/generated/moc_VpnControlDaemon.cpp

src/generated/moc_VpnClientConnection.cpp: src/VpnClientConnection.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/VpnClientConnection.h -o src/generated/moc_VpnClientConnection.cpp

src/generated/moc_VpnControlDaemonApplication.cpp: src/VpnControlDaemonApplication.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/VpnControlDaemonApplication.h -o src/generated/moc_VpnControlDaemonApplication.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: src/generated/qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) src/generated/qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

build/Release/main.o: src/main.cpp src/VpnControlDaemonApplication.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/main.o src/main.cpp

build/Release/VpnClientConnection.o: src/VpnClientConnection.cpp src/VpnClientConnection.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/VpnClientConnection.o src/VpnClientConnection.cpp

build/Release/VpnControlDaemonApplication.o: src/VpnControlDaemonApplication.cpp src/VpnControlDaemon.h \
		src/VpnControlDaemonApplication.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/VpnControlDaemonApplication.o src/VpnControlDaemonApplication.cpp

build/Release/VpnControlDaemon.o: src/VpnControlDaemon.cpp src/VpnClientConnection.h \
		src/VpnControlDaemon.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/VpnControlDaemon.o src/VpnControlDaemon.cpp

build/Release/moc_VpnControlDaemon.o: src/generated/moc_VpnControlDaemon.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/moc_VpnControlDaemon.o src/generated/moc_VpnControlDaemon.cpp

build/Release/moc_VpnClientConnection.o: src/generated/moc_VpnClientConnection.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/moc_VpnClientConnection.o src/generated/moc_VpnClientConnection.cpp

build/Release/moc_VpnControlDaemonApplication.o: src/generated/moc_VpnControlDaemonApplication.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o build/Release/moc_VpnControlDaemonApplication.o src/generated/moc_VpnControlDaemonApplication.cpp

####### Install

install_target: first FORCE
	@$(CHK_DIR_EXISTS) $(INSTALL_ROOT)/usr/lib/l2tp-ipsec-vpn-daemon/ || $(MKDIR) $(INSTALL_ROOT)/usr/lib/l2tp-ipsec-vpn-daemon/ 
	-$(INSTALL_PROGRAM) "dist/Release/$(QMAKE_TARGET)" "$(INSTALL_ROOT)/usr/lib/l2tp-ipsec-vpn-daemon/$(QMAKE_TARGET)"
	-$(STRIP) "$(INSTALL_ROOT)/usr/lib/l2tp-ipsec-vpn-daemon/$(QMAKE_TARGET)"

uninstall_target:  FORCE
	-$(DEL_FILE) "$(INSTALL_ROOT)/usr/lib/l2tp-ipsec-vpn-daemon/$(QMAKE_TARGET)"
	-$(DEL_DIR) $(INSTALL_ROOT)/usr/lib/l2tp-ipsec-vpn-daemon/ 


install:  install_target  FORCE

uninstall: uninstall_target   FORCE

FORCE:

